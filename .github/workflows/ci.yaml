name: "Building and Publishing"

on:
  push:
    branches:
      - develop
      - feature/DPTB-11

env:
  ARTEFACT_NAME: drinking-ponies-telegram-bot
  ARTEFACT_PATH: build/libs/drinking-ponies-telegram-bot.jar

jobs:
  version:
    runs-on: ubuntu-latest
    env:
      TAG_PATTERN: v[0-9].*
    outputs:
      version: ${{ steps.versions.outputs.default }}
      version_with_build: ${{ steps.versions.outputs.with_number }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: versions
        run: |
          VERSION=$(git describe --tags --abbrev=0 --match "v[0-9].*")
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          BUILD_NUMBER=${VERSION_PARTS[3]}
          
          if [ -z "$BUILD_NUMBER" ]; then
            BUILD_NUMBER=1
          else
            BUILD_NUMBER=$((BUILD_NUMBER + 1))
          fi
          
          VERSION_PARTS[3]=$BUILD_NUMBER
          WITH_NUMBER=$(IFS='.'; echo "${VERSION_PARTS[*]}")
          
          echo "default=${VERSION}" >> $GITHUB_OUTPUT
          echo "with_number=${WITH_NUMBER}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          architecture: x64
          java-version: 17

      - name: Gradle Test
        run: ./gradlew test

      - name: Gradle Assemble
        run: ./gradlew assemble

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTEFACT_NAME }}
          path: ${{ env.ARTEFACT_PATH }}

  publish:
    needs: [version, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTEFACT_NAME }}
          path: ${{ env.ARTEFACT_PATH }}

      - name: Docker Build and Push
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: illine/drinking-ponies-telegram-bot
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "${{ needs.version.outputs.version_with_build }},latest"
          tag_semver: true

  repository:
    needs: [version, publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ needs.version.outputs.version_with_build }}",
              sha: context.sha
            })