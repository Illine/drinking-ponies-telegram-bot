name: "Deploying to stage"

on:
  push:
    tags:
      - "*"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      stage: ${{ steps.environment.outputs.stage }}
      stack_name: ${{ steps.environment.outputs.stack_name }}
      liquibase_path: ${{ steps.environment.outputs.liquibase_path }}
      docker_compose_path: ${{ steps.environment.outputs.docker_compose_path }}
    steps:
      - id: environment
        run: |
          if [[ $github.ref == refs/tags/release ]]; then
            echo "Production environment setting"
          
            echo "stage=prod" >> $GITHUB_OUTPUT
            echo "stack_name=drinking-ponies" >> $GITHUB_OUTPUT
            echo "liquibase_path=/home/illine/drinking-ponies-telegram-bot/prod/liquibase.properties" >> $GITHUB_OUTPUT
            echo "docker_compose_path=/home/illine/drinking-ponies-telegram-bot/prod/docker-compose.yaml" >> $GITHUB_OUTPUT
          else
            echo "Test environment setting"
          
            echo "stage=test" >> $GITHUB_OUTPUT
            echo "stack_name=drinking-ponies-test" >> $GITHUB_OUTPUT
            echo "liquibase_path=/home/illine/drinking-ponies-telegram-bot/test/liquibase.properties" >> $GITHUB_OUTPUT
            echo "docker_compose_path=/home/illine/drinking-ponies-telegram-bot/test/docker-compose.yaml" >> $GITHUB_OUTPUT
          fi

  deploy:
    runs-on: self-hosted
    needs:
      - prepare
    env:
      LIQUIBASE_PROPERTIES_PATH: ${{ needs.prepare.outputs.liquibase_path }}
      DOCKER_IMAGE_LATEST: illine/drinking-ponies-telegram-bot:latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          architecture: x64
          java-version: 17

      - name: Updating a ${{ needs.prepare.outputs.stage }} database via liquibase
        run: ./gradlew update

      - name: Stopping and removing images, containers, networks
        run: |
          docker-compose -p ${{ needs.prepare.outputs.stack_name }} -f ${{ needs.prepare.outputs.docker_compose_path }} down
          docker rmi $DOCKER_IMAGE_LATEST

      - name: Deploying via Docker Compose to ${{ needs.prepare.outputs.stage }}
        run: |
          docker-compose -p ${{ needs.prepare.outputs.stack_name }} -f ${{ needs.prepare.outputs.docker_compose_path }} up -d